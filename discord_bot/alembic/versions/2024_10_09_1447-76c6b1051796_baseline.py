"""baseline

Revision ID: 76c6b1051796
Revises: 
Create Date: 2024-10-09 14:47:15.762100

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from backend.app import models
from backend.app.enum_type import EnumType

# revision identifiers, used by Alembic.
revision: str = '76c6b1051796'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('options_strategy_trades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('underlying_symbol', sa.String(), nullable=True),
    sa.Column('status', EnumType(models.OptionsStrategyStatusEnum), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('configuration_id', sa.Integer(), nullable=True),
    sa.Column('trade_group', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['configuration_id'], ['trade_configurations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_options_strategy_trades_id'), 'options_strategy_trades', ['id'], unique=False)
    op.create_index(op.f('ix_options_strategy_trades_name'), 'options_strategy_trades', ['name'], unique=False)
    op.create_index(op.f('ix_options_strategy_trades_underlying_symbol'), 'options_strategy_trades', ['underlying_symbol'], unique=False)
    op.create_table('role_requirement_roles',
    sa.Column('role_requirement_id', sa.Integer(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['role_requirement_id'], ['role_requirements.id'], )
    )
    op.create_table('verifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.String(), nullable=True),
    sa.Column('username', sa.String(), nullable=True),
    sa.Column('configuration_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['configuration_id'], ['verification_configs.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_verifications_id'), 'verifications', ['id'], unique=False)
    op.create_index(op.f('ix_verifications_user_id'), 'verifications', ['user_id'], unique=False)
    op.create_table('trades',
    sa.Column('trade_id', sa.String(), nullable=False),
    sa.Column('symbol', sa.String(), nullable=False),
    sa.Column('trade_type', sa.String(), nullable=False),
    sa.Column('status', EnumType(models.TradeStatusEnum), nullable=False),
    sa.Column('entry_price', sa.Float(), nullable=False),
    sa.Column('average_price', sa.Float(), nullable=True),
    sa.Column('current_size', sa.String(), nullable=True),
    sa.Column('size', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('closed_at', sa.DateTime(), nullable=True),
    sa.Column('exit_price', sa.Float(), nullable=True),
    sa.Column('average_exit_price', sa.Float(), nullable=True),
    sa.Column('profit_loss', sa.Float(), nullable=True),
    sa.Column('risk_reward_ratio', sa.Float(), nullable=True),
    sa.Column('win_loss', EnumType(models.WinLossEnum), nullable=True),
    sa.Column('configuration_id', sa.String(), nullable=True),
    sa.Column('strategy_trade_id', sa.Integer(), nullable=True),
    sa.Column('is_contract', sa.Boolean(), nullable=True),
    sa.Column('is_day_trade', sa.Boolean(), nullable=True),
    sa.Column('strike', sa.Float(), nullable=True),
    sa.Column('expiration_date', sa.DateTime(), nullable=True),
    sa.Column('option_type', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['configuration_id'], ['trade_configurations.id'], ),
    sa.ForeignKeyConstraint(['strategy_trade_id'], ['options_strategy_trades.id'], ),
    sa.PrimaryKeyConstraint('trade_id')
    )
    op.create_index(op.f('ix_trades_symbol'), 'trades', ['symbol'], unique=False)
    op.create_index(op.f('ix_trades_trade_id'), 'trades', ['trade_id'], unique=True)
    op.create_table('transactions',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('trade_id', sa.String(), nullable=True),
    sa.Column('transaction_type', EnumType(models.TransactionTypeEnum), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('size', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['trade_id'], ['trades.trade_id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transactions_id'), 'transactions', ['id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transactions_id'), table_name='transactions')
    op.drop_table('transactions')
    op.drop_index(op.f('ix_trades_trade_id'), table_name='trades')
    op.drop_index(op.f('ix_trades_symbol'), table_name='trades')
    op.drop_table('trades')
    op.drop_index(op.f('ix_verifications_user_id'), table_name='verifications')
    op.drop_index(op.f('ix_verifications_id'), table_name='verifications')
    op.drop_table('verifications')
    op.drop_table('role_requirement_roles')
    op.drop_index(op.f('ix_options_strategy_trades_underlying_symbol'), table_name='options_strategy_trades')
    op.drop_index(op.f('ix_options_strategy_trades_name'), table_name='options_strategy_trades')
    op.drop_index(op.f('ix_options_strategy_trades_id'), table_name='options_strategy_trades')
    op.drop_table('options_strategy_trades')
    # ### end Alembic commands ###
